{"version":3,"sources":["webpack:///./src/spa/shared/typography/typographyLink/typographyLink.tsx"],"names":["children","color","commonStyles","link","onClick","linkStyles","undefined","join","isAnchor","startsWith","isMailTo","className","href","rel","target","to"],"mappings":"4FAAA,mCAqDe,UAxCyB,SAAC,G,IACvCA,EAAA,EAAAA,SACAC,EAAA,EAAAA,MACAC,EAAA,EAAAA,aACAC,EAAA,EAAAA,KACAC,EAAA,EAAAA,QAEMC,EAAa,CACjB,OACU,UAAVJ,EAAoB,uBAAyBK,EAC7CJ,GACAK,KAAK,KACDC,EAAWL,EAAKM,WAAW,UAAYN,EAAKM,WAAW,UACvDC,EAAWP,EAAKM,WAAW,UAEjC,OAAID,EAEA,qBACEG,UAAWN,EACXO,KAAMT,EACNC,QAASA,EACTS,IAAKH,OAAWJ,EAAY,sBAC5BQ,OAAQJ,OAAWJ,EAAY,SAE9BN,GAML,gBAAC,IAAI,CACHW,UAAWN,EACXU,GAAIZ,EACJC,QAASA,GAERJ","file":"68.bundle.js","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TypographyProps } from 'types/typographyTypes';\nimport * as styles from '../typography.module.less';\n\ninterface Props {\n  children: React.ReactNode;\n  color: TypographyProps['color'];\n  commonStyles: string;\n  link: TypographyProps['link'];\n  onClick?: TypographyProps['onClick'];\n}\n\nconst TypographyLink: React.FC<Props> = ({\n  children,\n  color,\n  commonStyles,\n  link,\n  onClick,\n}) => {\n  const linkStyles = [\n    styles.link,\n    color === 'white' ? styles.whiteButtonLink : undefined,\n    commonStyles,\n  ].join(' ');\n  const isAnchor = link.startsWith('https') || link.startsWith('mailto');\n  const isMailTo = link.startsWith('mailto');\n\n  if (isAnchor) {\n    return (\n      <a\n        className={linkStyles}\n        href={link}\n        onClick={onClick}\n        rel={isMailTo ? undefined : 'noopener noreferrer'}\n        target={isMailTo ? undefined : 'blank'}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <Link\n      className={linkStyles}\n      to={link}\n      onClick={onClick}\n    >\n      {children}\n    </Link>\n  );\n};\n\nexport default TypographyLink;\n"],"sourceRoot":""}
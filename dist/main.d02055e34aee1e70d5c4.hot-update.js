exports.id = "main";
exports.modules = {

/***/ "./src/schema/card/cardMutations.ts":
/*!******************************************!*\
  !*** ./src/schema/card/cardMutations.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var server_serverError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! server/serverError */ "./src/server/serverError.ts");
/* harmony import */ var utils_getYoutubeVideoId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! utils/getYoutubeVideoId */ "./src/utils/getYoutubeVideoId.ts");
/* harmony import */ var youtube_youtube__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! youtube/youtube */ "./src/thirdParty/youtube/youtube.ts");
/* harmony import */ var _cardEnums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cardEnums */ "./src/schema/card/cardEnums.ts");
/* harmony import */ var _cardInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cardInfo */ "./src/schema/card/cardInfo.ts");





/* harmony default export */ __webpack_exports__["default"] = ({
    createUserCard: async (parent, args, { passport, prisma, pubsub }) => {
        try {
            const { category, isFavorite, isToDo, title, url, } = args.data;
            const userId = passport.getUserId();
            let createArgs;
            if (type === _cardEnums__WEBPACK_IMPORTED_MODULE_3__["default"].youtube) {
                const videoId = Object(utils_getYoutubeVideoId__WEBPACK_IMPORTED_MODULE_1__["default"])(url);
                const youtubeVideoData = await youtube_youtube__WEBPACK_IMPORTED_MODULE_2__["default"].getYoutubeVideoData(videoId);
                createArgs = {
                    youtubeCardData: {
                        create: {
                            ...youtubeVideoData,
                        },
                    },
                };
            }
            else {
                throw new Error('invalid card type');
            }
            const finalArgs = {
                ...args,
                data: {
                    cardData: {
                        create: { ...createArgs },
                    },
                    category,
                    isFavorite,
                    isToDo,
                    title,
                    type,
                    user: {
                        connect: {
                            id: userId,
                        },
                    },
                },
            };
            const card = await prisma.mutation.createCard(finalArgs, _cardInfo__WEBPACK_IMPORTED_MODULE_4__["default"]);
            pubsub.publish('userCard', { userCard: card });
            return card;
        }
        catch (error) {
            throw new server_serverError__WEBPACK_IMPORTED_MODULE_0__["default"]({ message: error.message, status: 400 });
        }
    },
    deleteUserCard: async (parent, args, { passport, prisma, pubsub }) => {
        const userId = passport.getUserId();
        const { cardId } = args.data;
        const queryArgs = {
            where: {
                id: cardId,
                user: {
                    id: userId,
                },
            },
        };
        const deleteArgs = {
            where: {
                id: cardId,
            },
        };
        // Make sure that the card that is trying to be deleted belongs to the user
        const userCard = await prisma.query.cards(queryArgs, '{ id }');
        if (userCard.length > 0) {
            const deletedCard = await prisma.mutation.deleteCard(deleteArgs, _cardInfo__WEBPACK_IMPORTED_MODULE_4__["default"]);
            pubsub.publish('deletedUserCard', { deletedUserCard: deletedCard });
            return deletedCard;
        }
        throw new server_serverError__WEBPACK_IMPORTED_MODULE_0__["default"]({
            message: 'The user does not have access to delete this card',
            status: 403,
        });
    },
    initiateUserCard: async (parent, args) => {
        try {
            const videoId = Object(utils_getYoutubeVideoId__WEBPACK_IMPORTED_MODULE_1__["default"])(args.data.url);
            const youtubeVideoData = await youtube_youtube__WEBPACK_IMPORTED_MODULE_2__["default"].getYoutubeVideoData(videoId);
            return {
                category: _cardEnums__WEBPACK_IMPORTED_MODULE_3__["default"].video,
                title: youtubeVideoData.channelTitle,
                url: args.data.url,
                youtubeCardData: youtubeVideoData,
            };
        }
        catch (error) {
            throw new server_serverError__WEBPACK_IMPORTED_MODULE_0__["default"]({ message: error.message, status: 400 });
        }
    },
    toggleFavoriteUserCard: async (parent, args, { passport, prisma }) => {
        const userId = passport.getUserId();
        const { cardId } = args.data;
        const queryArgs = {
            where: {
                id: cardId,
                user: {
                    id: userId,
                },
            },
        };
        // Make sure that the card that is trying to be deleted belongs to the user
        const userCard = await prisma.query.cards(queryArgs, '{ id isFavorite }');
        if (userCard.length > 0) {
            const updateArgs = {
                data: {
                    isFavorite: !userCard[0].isFavorite,
                },
                where: {
                    id: cardId,
                },
            };
            const updatedCard = await prisma.mutation.updateCard(updateArgs, _cardInfo__WEBPACK_IMPORTED_MODULE_4__["default"]);
            return updatedCard;
        }
        throw new server_serverError__WEBPACK_IMPORTED_MODULE_0__["default"]({
            message: 'The user does not have access to delete this card',
            status: 403,
        });
    },
    toggleToDoUserCard: async (parent, args, { passport, prisma }) => {
        const userId = passport.getUserId();
        const { cardId } = args.data;
        const queryArgs = {
            where: {
                id: cardId,
                user: {
                    id: userId,
                },
            },
        };
        // Make sure that the card that is trying to be deleted belongs to the user
        const userCard = await prisma.query.cards(queryArgs, '{ id isToDo }');
        if (userCard.length > 0) {
            const updateArgs = {
                data: {
                    isToDo: !userCard[0].isToDo,
                },
                where: {
                    id: cardId,
                },
            };
            const updatedCard = await prisma.mutation.updateCard(updateArgs, _cardInfo__WEBPACK_IMPORTED_MODULE_4__["default"]);
            return updatedCard;
        }
        throw new server_serverError__WEBPACK_IMPORTED_MODULE_0__["default"]({
            message: 'The user does not have access to delete this card',
            status: 403,
        });
    },
});


/***/ }),

/***/ "./src/schema/card/cardSchema.graphql":
/*!********************************************!*\
  !*** ./src/schema/card/cardSchema.graphql ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


    var doc = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Filters"},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"isFavorite"},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"isToDo"},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}},"directives":[]}]},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"FilteredUserCardsType"},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"filters"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Filters"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"userCards"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}}}},"directives":[]}]},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"InitialCardData"},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"category"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CardCategory"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"title"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"url"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"youtubeCardData"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"YoutubeCardData"}}},"directives":[]}]},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"CardFilterInput"},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"isFavorite"},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}},"directives":[]},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"isToDo"},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}},"directives":[]}]},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"CardIdInput"},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"cardId"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},"directives":[]}]},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"CardInput"},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"category"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CardCategory"}}},"directives":[]},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"isFavorite"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},"directives":[]},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"isToDo"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},"directives":[]},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"title"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},"directives":[]},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"url"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},"directives":[]}]},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"InitiateCardInput"},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"url"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},"directives":[]}]},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"Mutation"},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"createUserCard"},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CardInput"}}},"directives":[]}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"deleteUserCard"},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data"},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CardIdInput"}},"directives":[]}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"initiateUserCard"},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data"},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InitiateCardInput"}}},"directives":[]}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InitialCardData"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"toggleFavoriteUserCard"},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data"},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CardIdInput"}},"directives":[]}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"toggleToDoUserCard"},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data"},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CardIdInput"}},"directives":[]}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}},"directives":[]}]},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"Subscription"},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"deletedUserCard"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"filteredUserCards"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"FilteredUserCardsType"}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"userCard"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}},"directives":[]}]},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"Query"},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"userCards"},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}}}},"directives":[]},{"kind":"FieldDefinition","name":{"kind":"Name","value":"userCardsWithFilters"},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data"},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CardFilterInput"}},"directives":[]}],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Card"}}}}},"directives":[]}]}],"loc":{"start":0,"end":1140}};
    doc.loc.source = {"body":"# ----- TYPES ----- #\n\ntype Filters {\n  isFavorite: Boolean\n  isToDo: Boolean\n}\n\ntype FilteredUserCardsType {\n  filters: Filters!\n  userCards: [Card!]!\n}\n\ntype InitialCardData {\n  category: CardCategory!\n  title: String!\n  url: String!\n  youtubeCardData: YoutubeCardData!\n}\n\n# ----- INPUTS ----- #\n\ninput CardFilterInput {\n  isFavorite: Boolean\n  isToDo: Boolean\n}\n\ninput CardIdInput {\n  cardId: String!\n}\n\ninput CardInput {\n  category: CardCategory!\n  isFavorite: Boolean!\n  isToDo: Boolean!\n  title: String!\n  url: String!\n}\n\ninput InitiateCardInput {\n  url: String!\n}\n\n# ----- MUTATION ----- #\n\nextend type Mutation {\n  createUserCard(data: CardInput!): Card!\n  deleteUserCard(data: CardIdInput): Card!\n  initiateUserCard(data: InitiateCardInput!): InitialCardData!\n  toggleFavoriteUserCard(data: CardIdInput): Card!\n  toggleToDoUserCard(data: CardIdInput): Card!\n}\n\n# ----- SUBSCRIPTION ----- #\n\nextend type Subscription {\n  deletedUserCard: Card!\n  filteredUserCards: FilteredUserCardsType!\n  userCard: Card!\n}\n\n# ----- QUERY ----- #\n\nextend type Query {\n  userCards: [Card!]!\n  userCardsWithFilters(data: CardFilterInput): [Card!]!\n}\n","name":"GraphQL request","locationOffset":{"line":1,"column":1}};
  

    var names = {};
    function unique(defs) {
      return defs.filter(
        function(def) {
          if (def.kind !== 'FragmentDefinition') return true;
          var name = def.name.value
          if (names[name]) {
            return false;
          } else {
            names[name] = true;
            return true;
          }
        }
      )
    }
  

      module.exports = doc;
    


/***/ })

};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,